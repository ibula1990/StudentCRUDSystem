<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>